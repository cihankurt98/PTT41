<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="MAIN" Id="{a4f99ad4-3d99-4cc3-aec6-4b8f25d45e95}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
<<<<<<< HEAD

	Timer1 :TON;
	Timer2 : TON;
	PulseTimer1 : TP;
	PulseTimer2 : TP;

	CurrentState  : States;
	
	ServoRTrigY : R_Trig ; 
	ServoRTrigX : R_Trig ; 
	
	BusyFtrigX : F_Trig;
	BusyFtrigY : F_Trig;
	
	
	//Eigen trigger booleans
	InitYReady : BOOL;
	InitXReady : BOOL;
	
	ReadyX : BOOL;
	ReadyY : BOOL;
	
	Full : BOOL;
	Busy : BOOL;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[PulseTimer1(IN:=GVL_IO.Start_button, PT:=T#150MS);
PulseTimer2(IN:=Busy, PT:=T#150MS);

Timer1(IN:= GVL_IO.a_1_Vertical_Zaxis_downward, PT:= T#10MS);

CASE CurrentState OF
States.Init:
		//Aanzetten van servo's. Dit kan even duren GEEN HOMING
		GVL_IO.SVONX_SERVO_ON_tableX 	  := TRUE; 
		GVL_IO.SVONY_SERVO_ON_translY 	  := TRUE;
		
		GVL_IO.SETUPX_ORIGIN_tableX := PulseTimer1.Q;
		GVL_IO.SETUPY_ORIGIN_translY := PulseTimer1.Q;
		
		//// Koppelen van outputs Busy aan var's. Triggered op een falling edge.
		IF PulseTimer1.Q THEN
			ServoRTrigX ( clk := gvl_io.SETONX_ORIGIN_tableX ); 
	  		ServoRTrigY ( clk := gvl_io.SETONY_ORIGIN_translationY );
		END_IF
		
		// Bools setten aan de hand van triggers.
		IF ServoRTrigX.Q THEN
			InitXReady:= TRUE;
		END_IF
		
		IF ServoRTrigY.Q THEN
			InitYReady:= TRUE;
		END_IF
		
		// Init voltooid ga naar idle
		IF InitXReady AND InitYReady THEN
			CurrentState:= States.Idle;
		END_IF
		
States.Idle:
		IF NOT GVL_IO.Stop_button AND NOT GVL_IO.dp2_Cover_detection THEN
			//SEND MESSAGEE TODO
			CurrentState := States.Idle;
		END_IF
		
		IF NOT GVL_IO.Stop_button AND GVL_IO.dp1_Can_detection AND GVL_IO.dp2_Cover_detection AND NOT Full THEN
			CurrentState := States.MoveToPickUp; //TODO stopbutton
		END_IF
		
		IF Full THEN
			CurrentState := States.PalletFull;
		END_IF
		
States.MoveToPickUp:
		Busy := TRUE;
		GVL_IO.INX0_from_Input0_tableX := FALSE;
		GVL_IO.INX1_from_Input1_tableX := FALSE;
		GVL_IO.INX2_from_Input2_tableX := TRUE;
		GVL_IO.INY0_from_Input0_translY := TRUE;
		GVL_IO.INY1_from_Input1_translY := FALSE;
		GVL_IO.INY2_from_Input2_translY := TRUE;
		GVL_IO.DRIVEX_MOVE_tableX := PulseTimer2.Q;
		GVL_IO.DRIVEY_MOVE_translY := PulseTimer2.Q;
		
		//// Koppelen van outputs Busy aan var's. Triggered op een falling edge.
	   	BusyFtrigX ( clk := gvl_io.BUSYX_BUSY_tableX ); 
	  	BusyFtrigY ( clk := gvl_io.BUSYY_BUSY_traslationY );
		
		// Bools setten aan de hand van triggers.
		IF BusyFtrigX.Q THEN
			ReadyX:= TRUE;
		END_IF
		
		IF BusyFtrigY.Q THEN
			ReadyY:= TRUE;
		END_IF
		
		// Init voltooid ga naar idle
		IF ReadyY AND ReadyX THEN
			GVL_IO.DRIVEX_MOVE_tableX := FALSE;
			GVL_IO.DRIVEY_MOVE_translY := FALSE;
			ReadyX:= FALSE;
			ReadyY:= FALSE;
			Busy:= FALSE;
			CurrentState := States.PickUpDown;
		END_IF
		
States.PickUpDown:
		IF GVL_IO.a_0_Vertical_Zaxis_upward THEN
			GVL_IO.Aplus_Vert_axis_downwards := TRUE;
		END_IF
		
		IF GVL_IO.a_1_Vertical_Zaxis_downward THEN
			GVL_IO.Vplus_Vacuum_start := TRUE;
			
			IF Timer1.Q THEN
			CurrentState := States.PickUpUp;
			END_IF
		END_IF

States.PickUpUp:
		GVL_IO.Aplus_Vert_axis_downwards := FALSE;
		
		IF GVL_IO.a_0_Vertical_Zaxis_upward THEN
			CurrentState := States.MoveX;
		END_IF
		
States.MoveX:
		CurrentState := States.MoveY;
		
States.MoveY:
		CurrentState := States.DropDown;
		
States.DropDown:
		IF GVL_IO.a_0_Vertical_Zaxis_upward THEN
			GVL_IO.Aplus_Vert_axis_downwards := TRUE;
		END_IF
		
		IF 	GVL_IO.a_1_Vertical_Zaxis_downward THEN
			GVL_IO.Vplus_Vacuum_start := FALSE;
			Timer2(IN:=GVL_IO.a_1_Vertical_Zaxis_downward, PT:=T#10MS);
			IF Timer2.Q THEN
				CurrentState := States.DropUp;
			END_IF
		END_IF


States.DropUp:
		IF GVL_IO.a_1_Vertical_Zaxis_downward THEN
			GVL_IO.Aplus_Vert_axis_downwards := FALSE;
		END_IF
		
		IF GVL_IO.a_0_Vertical_Zaxis_upward THEN
			CurrentState := States.Idle;
		END_IF
END_CASE	]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="813" Count="0" />
      <LineId Id="483" Count="0" />
      <LineId Id="815" Count="0" />
      <LineId Id="814" Count="0" />
      <LineId Id="812" Count="0" />
      <LineId Id="455" Count="0" />
      <LineId Id="649" Count="0" />
      <LineId Id="657" Count="1" />
      <LineId Id="656" Count="0" />
      <LineId Id="659" Count="1" />
      <LineId Id="664" Count="0" />
      <LineId Id="505" Count="0" />
      <LineId Id="486" Count="0" />
      <LineId Id="762" Count="1" />
      <LineId Id="765" Count="0" />
      <LineId Id="764" Count="0" />
      <LineId Id="512" Count="0" />
      <LineId Id="508" Count="0" />
      <LineId Id="510" Count="0" />
      <LineId Id="526" Count="0" />
      <LineId Id="525" Count="0" />
      <LineId Id="529" Count="3" />
      <LineId Id="538" Count="0" />
      <LineId Id="534" Count="3" />
      <LineId Id="540" Count="1" />
      <LineId Id="563" Count="1" />
      <LineId Id="566" Count="0" />
      <LineId Id="565" Count="0" />
      <LineId Id="567" Count="3" />
      <LineId Id="573" Count="5" />
      <LineId Id="734" Count="0" />
      <LineId Id="579" Count="5" />
      <LineId Id="586" Count="1" />
      <LineId Id="666" Count="0" />
      <LineId Id="682" Count="14" />
      <LineId Id="702" Count="0" />
      <LineId Id="704" Count="0" />
      <LineId Id="707" Count="1" />
      <LineId Id="737" Count="0" />
      <LineId Id="697" Count="0" />
      <LineId Id="590" Count="0" />
      <LineId Id="598" Count="1" />
      <LineId Id="506" Count="0" />
      <LineId Id="622" Count="4" />
      <LineId Id="748" Count="0" />
      <LineId Id="750" Count="1" />
      <LineId Id="749" Count="0" />
      <LineId Id="627" Count="0" />
      <LineId Id="634" Count="0" />
      <LineId Id="633" Count="0" />
      <LineId Id="635" Count="4" />
      <LineId Id="642" Count="1" />
      <LineId Id="709" Count="5" />
      <LineId Id="716" Count="1" />
      <LineId Id="753" Count="3" />
      <LineId Id="718" Count="0" />
      <LineId Id="758" Count="2" />
      <LineId Id="757" Count="0" />
      <LineId Id="727" Count="0" />
      <LineId Id="729" Count="0" />
      <LineId Id="644" Count="0" />
      <LineId Id="730" Count="0" />
      <LineId Id="742" Count="5" />
      <LineId Id="641" Count="0" />
=======
	timer1 :TP;
	timer2 :TP;
	Init  :BOOL;
	BusyFTrigX : F_Trig;
	BusyFTrigY : F_Trig;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[gvl_io.SVONX_SERVO_ON_tableX:= TRUE;
gvl_io.SVONY_SERVO_ON_translY:= TRUE;

timer1 (IN:= gvl_io.Start_button , PT:= T#150MS);
GVL_IO.SETUPX_ORIGIN_tableX:= timer1.Q;
gvl_IO.SETUPY_ORIGIN_translY:= timer1.Q;
BusyFTrigX (clk :=gvl_io.BUSYX_BUSY_tableX ); 
BusyFTrigY (clk :=gvl_io.BUSYY_BUSY_traslationY );

IF NOT gvl_io.Stop_button THEN 
	gvl_io.INX0_from_Input0_tableX:= FALSE;
	gvl_io.INX1_from_Input1_tableX:= false;
	gvl_io.INX2_from_Input2_tableX:= true;
	gvl_io.INY0_from_Input0_translY:= TRUE;
	gvl_io.INY1_from_Input1_translY:= FALSE;
	gvl_io.INY2_from_Input2_translY:= TRUE;
	timer1 (IN:= gvl_io.Start_button , PT:= T#150MS);
	gvl_io.DRIVEX_MOVE_tableX:= TRUE;
	gvl_io.DRIVEY_MOVE_translY:= TRUE;		 
 END_IF
		 
 IF gvl_io.Reset_button THEN
	 gvl_io.DRIVEX_MOVE_tableX:= FALSE;
	gvl_io.DRIVEY_MOVE_translY:= FALSE;
 END_IF]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="335" Count="1" />
      <LineId Id="339" Count="4" />
      <LineId Id="301" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="306" Count="5" />
      <LineId Id="315" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="304" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="334" Count="0" />
      <LineId Id="319" Count="1" />
      <LineId Id="322" Count="0" />
      <LineId Id="321" Count="0" />
>>>>>>> master
    </LineIds>
  </POU>
</TcPlcObject>